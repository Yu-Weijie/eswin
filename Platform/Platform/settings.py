"""
Django settings for Platform project.

Generated by 'django-admin startproject' using Django 3.2.18.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h*-bek%7)+sb=2fcckz^mith#5omr-dp^@m7-*i1&b6e^90l6x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']  # 允许所有站点访问

# Application definition

INSTALLED_APPS = [
    'simpleui',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',  # websocket
    'app01.apps.App01Config',  # 注册app01
    'RVR.apps.RvrConfig',
    'SYSTEM.apps.SystemConfig',
    'POWER.apps.PowerConfig',
    'COMPATIBILITY.apps.CompatibilityConfig',
    'django_apscheduler',  # 定时任务
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',   # CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Platform.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#         'timeout': 20,
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  # 数据库引擎
        'NAME': 'ESWIN',  # 数据库名字
        'USER': 'root',  # 用户名
        'PASSWORD': '1044998299',  # 密码
        'HOST': '127.0.0.1',  # HOST
        'PORT': '3306',  # 端口
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/


# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# 修改p
LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'
USE_TZ = False  # 这里务必调整为False，否则时区设置无效

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

import os

# STATIC_URL用于引用STATIC_ROOT所指向的静态文件。举个栗子，在python manage.py runserver后，
# 我能够以http://localhost:8000/static/mystie_polls_static.txt为路径，访问到STATIC_ROOT下的静态文件。
# 但是，如果你使用了nginx（或其他）服务器后，该规则就无效了。服务器会接管URL匹配规则，你需要在nginx服务器的配置文件中定义/static的alias。

STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]
STATIC_ROOT = os.path.join(BASE_DIR, "static")  # python manage.py collectstatic 把静态文件收集到 STATIC_ROOT中
#
STATIC_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# 去掉默认Logo或换成自己Logo链接
# SIMPLEUI_LOGO = 'https://th.bing.com/th/id/R2411a2b340731d67dfa0d84503e915e3?rik=zmYce%2fLys72JVQ&pid=ImgRaw'
SIMPLEUI_LOGO = 'https://img.kanzhun.com/images/logo/20190327/cc0b5474da77b6bd55aa6dc0669b7ab5.jpg?x-oss-process=image/resize,w_180,h_180,m_mfit,limit_0'
# SIMPLEUI_LOGO = 'https://t10.baidu.com/it/u=2907723322,3087698762&fm=98&app=97&f=JPEG?w=599&h=450&s=59223C72CFB05C8048E781CE030030B1'

# 隐藏右侧SimpleUI广告链接和使用分析
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# 改变默认主题
SIMPLEUI_DEFAULT_THEME = 'light.css'

# 修改首页设置, 指向新创建的控制面板
# SIMPLEUI_HOME_PAGE = '/dashboard/'
# SIMPLEUI_HOME_TITLE = '控制面板'
# SIMPLEUI_HOME_ICON = 'fa fa-eye'

SIMPLEUI_CONFIG = {
    # 是否使用系统默认菜单，自定义菜单时建议关闭。
    'system_keep': False,
    # 用于菜单排序和过滤, 不填此字段为默认排序和全部显示。空列表[] 为全部不显示.
    'menu_display': ['权限认证', '监控大屏', '路由器管理', '测试分析', '系统测试', '兼容性测试', 'RVR测试', '省电测试'],
    # 设置是否开启动态菜单, 默认为False. 如果开启, 则会在每次用户登陆时刷新展示菜单内容。
    # 一般建议关闭。
    'dynamic': False,
    'menus': [
        {
            'app': 'auth',
            'name': '权限认证',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': '用户列表',
                    'icon': 'fa fa-user',
                    'url': 'auth/user/'
                },
                {
                    'name': '用户组',
                    'icon': 'fa fa-users',
                    'url': 'auth/group/'
                }
            ]
        },
        {
            'name': '路由器管理',
            'icon': 'fa fa-bank',
            'url': '/admin/app01/router/'
        },
        {
            'name': 'RVR测试',
            'icon': 'fa fa-sitemap',
            'models': [
                {
                    'name': '数据总览',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/RVR/test/',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '吞吐量测试',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/RVR/throughput/',
                    'icon': 'fa fa-hourglass-2'
                },
                {
                    'name': '联网测试',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/RVR/throughput/',
                    'icon': 'fa fa-link'
                },
            ]
        },
        {
            'name': '系统测试',
            'icon': 'fa fa-cogs',
            'models': [
                {
                    'name': 'Smoke',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/smoke/',
                    'icon': 'fa fa-fire'
                },
                {
                    'name': 'WIFI_STA',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/wifista/',
                    'icon': 'fa fa-mobile'
                },
                {
                    'name': 'WIFI_AP',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/wifiap/',
                    'icon': 'fa fa-wifi'
                },
                {
                    'name': 'WIFI_Delay',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/wifidelay/',
                    'icon': 'fa fa-umbrella'
                },
                {
                    'name': 'WIFI_ThroughPut',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/wifithroughput/',
                    'icon': 'fa fa-hourglass-2'
                },
                {
                    'name': 'WIFI_FT',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/wifift/',
                    'icon': 'fa fa-rocket'
                },
                {
                    'name': 'BLE',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/ble/',
                    'icon': 'fa fa-bold'
                },
                {
                    'name': 'BLE_MESH',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/SYSTEM/blemesh/',
                    'icon': 'fa fa-file'
                },
            ]
        },

        {
            'name': '省电测试',
            'icon': 'fa fa-battery-3',
            'models': [
                {
                    'name': '数据总览',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/POWER/test/',
                    'icon': 'fa fa-tasks'
                },
                {
                    'name': '吞吐量测试',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/POWER/throughput/',
                    'icon': 'fa fa-hourglass-2'
                },
                {
                    'name': '联网测试',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/POWER/throughput/',
                    'icon': 'fa fa-link'
                },
            ]
        },

        {
            'name': '兼容性测试',
            'icon': 'fa fa-handshake',
            'models': [
                {
                    'name': '透传',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/COMPATIBILITY/tt/',
                    'icon': 'fa fa-crosshairs'
                },
                {
                    'name': 'IOT',
                    # 注意规则： '/admin/应用名小写/模型名小写/'
                    'url': '/admin/COMPATIBILITY/iot/',
                    'icon': 'fa fa-wifi'
                },
            ]
        },

        {
            'name': '监控大屏',
            'icon': 'fa fa-dashboard',
            'url': '/dashboard/'
        },

    ]
}

# 定时任务
CRONJOBS = [
    ('*/1 * * * *', 'app01.cron.test')
]

# websocket
ASGI_APPLICATION = 'Platform.asgi.application'  # websocket

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    },
}

os.environ['DJANGO_ALLOW_ASYNC_UNSAFE'] = 'true'  # 允许异步模式
